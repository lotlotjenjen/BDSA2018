    public interface ICharacterRepository
    {
        Task<int> CreateAsync(CharacterCreateUpdateDTO character);

        Task<CharacterDTO> FindAsync(int characterId);

        IQueryable<CharacterDTO> Read();

        Task<bool> UpdateAsync(CharacterCreateUpdateDTO character);

        Task<bool> DeleteAsync(int characterId);
    }



	        Parallel.For(0, 999, i => {
                Console.WriteLine(i);
            });

			Parallel.ForEach(numbers, i => {
                Console.WriteLine(i);
            });

			Parallel.Invoke(SuperLongRunningThingy1, 
                SuperLongRunningThingy2, 
                SuperLongRunningThingy3, 
                SuperLongRunningThingy4);